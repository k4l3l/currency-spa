{"version":3,"sources":["axios-api.js","App.js","reportWebVitals.js","index.js"],"names":["api","currStringArr","ax","axios","create","baseURL","timeout","reqArr","map","c","get","all","App","currs","useState","allCurrencies","setAllCurrencies","selectedCurr","setSelectedCurr","setCurrencies","groupOne","setGroupOne","groupTwo","setGroupTwo","groupThree","setGroupThree","longestCount","setLongestCount","setState","currArr","curr","selectedArr","filter","name","includes","value","findLongest","arr","max","count","startIdx","idx","i","length","Math","abs","fetchData","a","transformedArr","forEach","c2","j","push","toLowerCase","res","localStorage","setItem","Date","now","mappedRes","r","data","stateArr","slice","toFixed","sort","b","JSON","stringify","useEffect","isCached","parseInt","getItem","date","Number","console","log","parse","loadData","className","id","onChange","e","text","target","options","selectedIndex","toUpperCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f3b4005.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const api = {\r\n    async getAllRates(currStringArr) {\r\n        const ax = axios.create({\r\n            baseURL: \"https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/\",            \r\n            timeout: 1000\r\n        });\r\n        const reqArr = currStringArr.map(c => {\r\n            return ax.get(c);\r\n        });        \r\n        return await axios.all(reqArr);\r\n        // return await ax.all(reqArr)\r\n        // .then(res => {\r\n        //     console.log(res);\r\n        // })\r\n        // .catch(err => console.log(err));\r\n    }\r\n}","import { useEffect, useState } from 'react';\nimport './App.css';\nimport { api } from './axios-api';\n\nfunction App() {\n  const currs = [\"USD\", \"EUR\", \"AUD\", \"CAD\", \"CHF\", \"NZD\", \"BGN\"];\n\n  const [allCurrencies, setAllCurrencies] = useState([]);\n  const [selectedCurr, setSelectedCurr] = useState(\"usd\");\n  const [currencies, setCurrencies] = useState([]);\n  const [groupOne, setGroupOne] = useState([]);\n  const [groupTwo, setGroupTwo] = useState([]);\n  const [groupThree, setGroupThree] = useState([]);\n  const [longestCount, setLongestCount] = useState(-1);\n\n  const setState = (currArr, curr = null) => {\n    \n    setAllCurrencies(currArr);\n    const selectedArr = currArr.filter(c => c.name.includes(curr ? curr : selectedCurr));\n    setCurrencies(selectedArr);\n    setGroupOne(selectedArr.filter(c => c.value < 1));\n    setGroupTwo(selectedArr.filter(c =>  c.value >= 1 && c.value < 1.5));\n    setGroupThree(selectedArr.filter(c => c.value >= 1.5));\n    setLongestCount(findLongest(selectedArr));\n  }\n\n  const findLongest = (arr) => {\n    let max = 1;\n    let count = 1;\n    let startIdx = 0;\n    let idx = 1;\n    for (let i = 0; i < arr.length-1; i++) {\n      if (Math.abs(arr[i].value - arr[i+1].value) <= 0.5) {\n        if (Math.abs(arr[startIdx].value - arr[i+1].value) <= 0.5) {\n          count++;\n        } else {\n          if (max < count) {\n            max = count;            \n          } \n          count = 1;\n          startIdx = idx;\n          i = idx++;          \n        }\n      } else {\n          count = 1;\n          startIdx = idx;\n          i = idx++;\n      }\n    }\n    return max;\n  }\n\n  const fetchData = async () => {\n    const transformedArr = [];\n    const arr = []; \n    // create a set with every possible combination\n    currs.forEach((c,i) => {\n      currs.forEach((c2,j) => {\n        if(i !== j) {          \n          transformedArr.push(`${c.toLowerCase()}/${c2.toLowerCase()}.json`);\n          arr.push({name: `${c.toLowerCase()}-${c2.toLowerCase()}`});\n        }\n      })\n    });\n    const res = await api.getAllRates(transformedArr);\n    \n    localStorage.setItem(\"cached\", 1);\n    localStorage.setItem(\"date\", Date.now());\n    const mappedRes = res.map(r => r.data);\n    const stateArr = arr.map((r,i) => {\n      // state will be [{name:\"usd-eur\", value: 0.84}, {...},...]\n      return {...r, value: mappedRes[i][r.name.slice(-3)].toFixed(2)};\n    }).sort((a,b) => a.value - b.value);\n    \n    localStorage.setItem(\"currencies\", JSON.stringify(stateArr));\n    setState(stateArr);\n  }\n\n  const loadData = () => {\n    if(!localStorage.getItem(\"cached\")) {\n      fetchData();\n    }\n    const currs = JSON.parse(localStorage.getItem(\"currencies\"));\n    setState(currs);\n  };\n  \n  useEffect(() => {\n      const isCached = !!parseInt(localStorage.getItem(\"cached\"));\n      const date = Number(localStorage.getItem(\"date\"));\n      // if no date no cached info or if 24h have passed since last fetch\n      if (!isCached || !date || (Date.now() - date) > (1000 * 60 * 60 * 24)) {\n        console.log('getting data');\n        fetchData();\n      } else {\n        loadData();\n      }\n  },[]);\n\n  const getCurrencies = (e) => {\n    const text = e.target.options[e.target.selectedIndex].text.toLowerCase();\n    setSelectedCurr(text);\n    setState(allCurrencies, text);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"heading padding\">\n        <h3>Please select a currency</h3>\n        <select name=\"currencies\" id=\"currencies\" onChange={getCurrencies}>\n          {currs && currs.map( (c,i) => <option value={c} key={i}>{c}</option>)}\n        </select>\n      </div>\n      <p className=\"padding\">Selected currency rates: </p>\n      <ul className=\"groups padding\">\n      <div className=\"group\">      \n        <p>Group 1</p>\n        {groupOne.map((c,i) => <li key={i}><b>{c.name.toUpperCase()}:</b> {c.value}</li>)}\n        <p>Count: {groupOne.length}</p>\n      </div>\n      <div className=\"group\">\n      <p>Group 2</p>\n        {groupTwo.map((c,i) => <li key={i}><b>{c.name.toUpperCase()}:</b> {c.value}</li>)}\n        <p>Count: {groupTwo.length}</p>\n      </div>\n      <div className=\"group\">\n        <p>Group 3</p>\n        {groupThree.map((c,i) => <li key={i}><b>{c.name.toUpperCase()}:</b> {c.value}</li>)}\n        <p>Count: {groupThree.length}</p>\n      </div>\n      </ul>\n      <h4 className=\"padding\">Longest count: {longestCount}</h4>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}